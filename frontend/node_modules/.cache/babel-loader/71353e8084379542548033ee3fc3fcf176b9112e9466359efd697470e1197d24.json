{"ast":null,"code":"var _jsxFileName = \"/Users/apple/chatwithyash/homelx/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:8000\"; // Change if backend runs elsewhere\n\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [userInfo, setUserInfo] = useState(null);\n  const [recording, setRecording] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n\n  // Speech recognition hook\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n\n  // Fetch user info on mount\n  React.useEffect(() => {\n    fetch(`${API_BASE}/user_info`).then(res => res.json()).then(setUserInfo).catch(() => {});\n  }, []);\n  const sendText = async textToSend => {\n    const text = textToSend !== undefined ? textToSend : input;\n    if (!text.trim()) return;\n    setLoading(true);\n    setMessages(msgs => [...msgs, {\n      role: \"user\",\n      content: text\n    }]);\n    setInput(\"\");\n    try {\n      const res = await fetch(`${API_BASE}/chat`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_input: text,\n          input_type: \"text\"\n        })\n      });\n      const data = await res.json();\n      setMessages(msgs => [...msgs, {\n        role: \"assistant\",\n        content: data.answer\n      }]);\n      setAudioUrl(data.audio_url ? `${API_BASE}${data.audio_url}` : null);\n    } catch (e) {\n      alert(\"Error communicating with server.\");\n    }\n    setLoading(false);\n  };\n  const sendVoiceBlob = async blob => {\n    setLoading(true);\n    // Add a placeholder for the user's voice message\n    setMessages(msgs => [...msgs, {\n      role: \"user\",\n      content: \"[Voice message sent]\"\n    }]);\n    const formData = new FormData();\n    formData.append(\"file\", blob, \"recording.wav\");\n    try {\n      const res = await fetch(`${API_BASE}/voice`, {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await res.json();\n      // Update the last user message with the transcribed text\n      setMessages(msgs => {\n        const updated = [...msgs];\n        // Find the last user message with the placeholder\n        for (let i = updated.length - 1; i >= 0; i--) {\n          if (updated[i].role === \"user\" && updated[i].content === \"[Voice message sent]\") {\n            updated[i] = {\n              ...updated[i],\n              content: data.answer ? data.answer.split('\\n')[0] : \"[Voice message]\"\n            };\n            break;\n          }\n        }\n        // Add the assistant's response\n        return [...updated, {\n          role: \"assistant\",\n          content: data.answer\n        }];\n      });\n      setAudioUrl(data.audio_url ? `${API_BASE}${data.audio_url}` : null);\n    } catch (e) {\n      alert(\"Error communicating with server.\");\n    }\n    setLoading(false);\n  };\n  const startRecording = async () => {\n    if (!navigator.mediaDevices) {\n      alert(\"Media devices not supported in this browser.\");\n      return;\n    }\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const mediaRecorder = new window.MediaRecorder(stream);\n      audioChunksRef.current = [];\n      mediaRecorder.ondataavailable = e => {\n        if (e.data.size > 0) {\n          audioChunksRef.current.push(e.data);\n        }\n      };\n      mediaRecorder.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: 'audio/wav'\n        });\n        sendVoiceBlob(audioBlob);\n        stream.getTracks().forEach(track => track.stop());\n      };\n      mediaRecorderRef.current = mediaRecorder;\n      mediaRecorder.start();\n      setRecording(true);\n    } catch (err) {\n      alert(\"Could not start recording: \" + err.message);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setRecording(false);\n    }\n  };\n  const clearChat = async () => {\n    await fetch(`${API_BASE}/clear`, {\n      method: \"POST\"\n    });\n    setMessages([]);\n    setAudioUrl(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Yash's Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), userInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userinfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: userInfo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), \" | \", userInfo.current_role]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      children: [messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.role,\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [msg.role === \"user\" ? \"You\" : \"Yash\", \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), \" \", msg.content]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"assistant\",\n        children: \"Yash is typing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      src: audioUrl,\n      style: {\n        marginTop: 10\n      },\n      children: \"Your browser does not support the audio element.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        disabled: loading,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && sendText(),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sendText(),\n        disabled: loading || !input.trim(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: recording ? stopRecording : startRecording,\n        disabled: loading,\n        style: {\n          background: recording ? '#d9534f' : undefined\n        },\n        children: recording ? \"Stop\" : \"Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearChat,\n        disabled: loading,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transcribe-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 16,\n          marginBottom: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Live Voice-to-Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), !browserSupportsSpeechRecognition ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Your browser does not support speech recognition.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: listening ? SpeechRecognition.stopListening : () => SpeechRecognition.startListening({\n            continuous: true\n          }),\n          style: {\n            background: listening ? '#d9534f' : undefined,\n            marginRight: 8\n          },\n          disabled: loading,\n          children: listening ? \"Stop Transcribing\" : \"Start Transcribing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetTranscript,\n          disabled: loading || !transcript,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            sendText(transcript);\n            resetTranscript();\n          },\n          disabled: loading || !transcript.trim(),\n          style: {\n            marginLeft: 8\n          },\n          children: \"Send Transcript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcript-area\",\n          style: {\n            marginTop: 8,\n            minHeight: 32,\n            background: '#f3f3f3',\n            borderRadius: 6,\n            padding: 8\n          },\n          children: transcript || /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#aaa'\n            },\n            children: \"Transcript will appear here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GZnMVIRx3nDFN9XtdXkgB98lXi4=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","App","_s","messages","setMessages","input","setInput","audioUrl","setAudioUrl","loading","setLoading","userInfo","setUserInfo","recording","setRecording","mediaRecorderRef","audioChunksRef","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","useEffect","fetch","then","res","json","catch","sendText","textToSend","text","undefined","trim","msgs","role","content","method","headers","body","JSON","stringify","user_input","input_type","data","answer","audio_url","e","alert","sendVoiceBlob","blob","formData","FormData","append","updated","i","length","split","startRecording","navigator","mediaDevices","stream","getUserMedia","audio","mediaRecorder","window","MediaRecorder","current","ondataavailable","size","push","onstop","audioBlob","Blob","type","getTracks","forEach","track","stop","start","err","message","stopRecording","clearChat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","current_role","map","msg","controls","src","style","marginTop","value","disabled","onChange","target","onKeyDown","key","placeholder","onClick","background","marginBottom","stopListening","startListening","continuous","marginRight","marginLeft","minHeight","borderRadius","padding","color","_c","$RefreshReg$"],"sources":["/Users/apple/chatwithyash/homelx/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport \"./App.css\";\n\nconst API_BASE = \"http://localhost:8000\"; // Change if backend runs elsewhere\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [userInfo, setUserInfo] = useState(null);\n  const [recording, setRecording] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n\n  // Speech recognition hook\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n\n  // Fetch user info on mount\n  React.useEffect(() => {\n    fetch(`${API_BASE}/user_info`)\n      .then(res => res.json())\n      .then(setUserInfo)\n      .catch(() => {});\n  }, []);\n\n  const sendText = async (textToSend) => {\n    const text = textToSend !== undefined ? textToSend : input;\n    if (!text.trim()) return;\n    setLoading(true);\n    setMessages(msgs => [...msgs, { role: \"user\", content: text }]);\n    setInput(\"\");\n    try {\n      const res = await fetch(`${API_BASE}/chat`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ user_input: text, input_type: \"text\" })\n      });\n      const data = await res.json();\n      setMessages(msgs => [...msgs, { role: \"assistant\", content: data.answer }]);\n      setAudioUrl(data.audio_url ? `${API_BASE}${data.audio_url}` : null);\n    } catch (e) {\n      alert(\"Error communicating with server.\");\n    }\n    setLoading(false);\n  };\n\n  const sendVoiceBlob = async (blob) => {\n    setLoading(true);\n    // Add a placeholder for the user's voice message\n    setMessages(msgs => [...msgs, { role: \"user\", content: \"[Voice message sent]\" }]);\n    const formData = new FormData();\n    formData.append(\"file\", blob, \"recording.wav\");\n    try {\n      const res = await fetch(`${API_BASE}/voice`, {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await res.json();\n      // Update the last user message with the transcribed text\n      setMessages(msgs => {\n        const updated = [...msgs];\n        // Find the last user message with the placeholder\n        for (let i = updated.length - 1; i >= 0; i--) {\n          if (updated[i].role === \"user\" && updated[i].content === \"[Voice message sent]\") {\n            updated[i] = { ...updated[i], content: data.answer ? data.answer.split('\\n')[0] : \"[Voice message]\" };\n            break;\n          }\n        }\n        // Add the assistant's response\n        return [...updated, { role: \"assistant\", content: data.answer }];\n      });\n      setAudioUrl(data.audio_url ? `${API_BASE}${data.audio_url}` : null);\n    } catch (e) {\n      alert(\"Error communicating with server.\");\n    }\n    setLoading(false);\n  };\n\n  const startRecording = async () => {\n    if (!navigator.mediaDevices) {\n      alert(\"Media devices not supported in this browser.\");\n      return;\n    }\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const mediaRecorder = new window.MediaRecorder(stream);\n      audioChunksRef.current = [];\n      mediaRecorder.ondataavailable = (e) => {\n        if (e.data.size > 0) {\n          audioChunksRef.current.push(e.data);\n        }\n      };\n      mediaRecorder.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\n        sendVoiceBlob(audioBlob);\n        stream.getTracks().forEach(track => track.stop());\n      };\n      mediaRecorderRef.current = mediaRecorder;\n      mediaRecorder.start();\n      setRecording(true);\n    } catch (err) {\n      alert(\"Could not start recording: \" + err.message);\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setRecording(false);\n    }\n  };\n\n  const clearChat = async () => {\n    await fetch(`${API_BASE}/clear`, { method: \"POST\" });\n    setMessages([]);\n    setAudioUrl(null);\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Yash's Chatbot</h2>\n      {userInfo && (\n        <div className=\"userinfo\">\n          <b>{userInfo.name}</b> | {userInfo.current_role}\n        </div>\n      )}\n      <div className=\"chatbox\">\n        {messages.map((msg, i) => (\n          <div key={i} className={msg.role}>\n            <b>{msg.role === \"user\" ? \"You\" : \"Yash\"}:</b> {msg.content}\n          </div>\n        ))}\n        {loading && <div className=\"assistant\">Yash is typing...</div>}\n      </div>\n      {audioUrl && (\n        <audio controls src={audioUrl} style={{ marginTop: 10 }}>\n          Your browser does not support the audio element.\n        </audio>\n      )}\n      <div className=\"input-row\">\n        <input\n          type=\"text\"\n          value={input}\n          disabled={loading}\n          onChange={e => setInput(e.target.value)}\n          onKeyDown={e => e.key === \"Enter\" && sendText()}\n          placeholder=\"Type your message...\"\n        />\n        <button onClick={() => sendText()} disabled={loading || !input.trim()}>Send</button>\n        <button\n          onClick={recording ? stopRecording : startRecording}\n          disabled={loading}\n          style={{ background: recording ? '#d9534f' : undefined }}\n        >\n          {recording ? \"Stop\" : \"Record\"}\n        </button>\n        <button onClick={clearChat} disabled={loading}>Clear</button>\n      </div>\n      {/* Live voice-to-text transcription UI */}\n      <div className=\"transcribe-box\">\n        <div style={{ marginTop: 16, marginBottom: 4 }}>\n          <b>Live Voice-to-Text:</b>\n        </div>\n        {!browserSupportsSpeechRecognition ? (\n          <div>Your browser does not support speech recognition.</div>\n        ) : (\n          <>\n            <button\n              onClick={listening ? SpeechRecognition.stopListening : () => SpeechRecognition.startListening({ continuous: true })}\n              style={{ background: listening ? '#d9534f' : undefined, marginRight: 8 }}\n              disabled={loading}\n            >\n              {listening ? \"Stop Transcribing\" : \"Start Transcribing\"}\n            </button>\n            <button onClick={resetTranscript} disabled={loading || !transcript}>Reset</button>\n            <button\n              onClick={() => {\n                sendText(transcript);\n                resetTranscript();\n              }}\n              disabled={loading || !transcript.trim()}\n              style={{ marginLeft: 8 }}\n            >\n              Send Transcript\n            </button>\n            <div className=\"transcript-area\" style={{ marginTop: 8, minHeight: 32, background: '#f3f3f3', borderRadius: 6, padding: 8 }}>\n              {transcript || <span style={{ color: '#aaa' }}>Transcript will appear here...</span>}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}